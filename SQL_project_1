CREATE WAREHOUSE HF_WAREHOUSE;


CREATE DATABASE HF_DATABASE;
USE HF_DATABASE;

--------TASK 1

CREATE TABLE SHOPPING_HISTORY(
PRODUCT VARCHAR NOT NULL,
QUANTITY INTEGER NOT NULL,
UNIT_PRICE INTEGER NOT NULL
);

INSERT INTO SHOPPING_HISTORY
(PRODUCT, QUANTITY, UNIT_PRICE)
VALUES
('MILK', 5, 6),
('OIL', 9, 8),
('BREAD', 2, 3),
('VEGTABLES', 4, 2),
('BREAD', 1, 4),
('FRUITS', 5, 3),
('MILK', 4, 2);

SELECT * FROM SHOPPING_HISTORY;


SELECT PRODUCT, SUM(QUANTITY * UNIT_PRICE) AS TOTAL_PRICE FROM SHOPPING_HISTORY 
GROUP BY PRODUCT 
ORDER BY PRODUCT DESC;

------TASK 2
DROP TABLE PHONE;

CREATE TABLE PHONES(
NAME VARCHAR NOT NULL UNIQUE,
PHONE_NUMBER INTEGER NOT NULL UNIQUE
);

INSERT INTO PHONES
(NAME, PHONE_NUMBER)
VALUES
('RAM', 1234),
('RADHA', 2222),
('TINA', 3333),
('VIJAY', 9999),
('SITA', 4321);

CREATE TABLE CALLS(
ID INTEGER NOT NULL,
CALLER INTEGER NOT NULL,
CALLEE INTEGER NOT NULL,
DURATION INTEGER NOT NULL,
UNIQUE(ID)
);

INSERT INTO CALLS
(ID, CALLER, CALLEE, DURATION)
VALUES
(25,1234,4321,8),
(7,2222,9999,3),
(18,3333,4321,5),
(15,9999,1234,6),
(27,9999,3333,1),
(9,3333,2222,2),
(5,4321,1234,2);

SELECT * FROM CALLS;


CREATE TABLE HF_CALLS AS
SELECT
    PHONES.NAME,
    CALLS.CALLER,
    SUM(DURATION) AS CALLER_TOTAL_DURATION,
    SUBQUERY.CALLEE_TOTAL_DURATION,
    SUM(DURATION) + SUBQUERY.CALLEE_TOTAL_DURATION AS TOTAL_DURATION
FROM PHONES
LEFT JOIN CALLS ON PHONES.PHONE_NUMBER = CALLS.CALLER
LEFT JOIN (
    SELECT CALLS.CALLEE, SUM(DURATION) AS CALLEE_TOTAL_DURATION
    FROM CALLS
    LEFT JOIN PHONES ON CALLS.CALLEE = PHONES.PHONE_NUMBER
    GROUP BY CALLS.CALLEE
) AS SUBQUERY ON CALLS.CALLER = SUBQUERY.CALLEE
GROUP BY PHONES.NAME, CALLS.CALLER, SUBQUERY.CALLEE_TOTAL_DURATION;

SELECT * FROM HF_CALLS;

SELECT NAME FROM HF_CALLS
WHERE TOTAL_DURATION >= 10;


-----TASK3

CREATE TABLE TRANSACTIONS(
AMOUNT INTEGER NOT NULL,
DATE DATE NOT NULL
);

INSERT INTO TRANSACTIONS
(AMOUNT, DATE)
VALUES
(1000, '2020-01-06'),
(-10, '2020-01-14'),
(-75, '2020-01-20'),
(-5, '2020-01-25'),
(-4, '2020-01-29'),
(2000, '2020-03-10'),
(-75, '2020-03-12'),
(-20, '2020-03-15'),
(40, '2020-03-15'),
(-50, '2020-03-17'),
(200, '2020-10-10'),
(-200, '2020-10-10');

SELECT * FROM TRANSACTIONS;

#THIS IS FOR CALCULATE WHICH MONTH WE HAVE CAHARGEs ,SO ALL THE 11 MONTHS WILL CAHRGED UNLESS 1 MONTH(MARCH).
 
WITH TRANS_TAB AS (
   SELECT EXTRACT(MONTH FROM DATE) AS MONTH,
   COUNT(AMOUNT) AS TOT_T, 
   SUM(AMOUNT) AS TOT_A 
   FROM TRANSACTIONS 
   WHERE AMOUNT < 0
   GROUP BY MONTH
)
  SELECT HF.MONTH,
   CASE WHEN HF.TOT_A < -100 AND TOT_T >= 3 THEN 0 ELSE 5 END  AS CHARGE
   FROM TRANS_TAB AS HF;
   



SELECT SUM(AMOUNT) - 55 AS BALANCE FROM TRANSACTIONS; 
   

















